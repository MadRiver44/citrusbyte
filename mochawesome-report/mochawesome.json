{
  "stats": {
    "suites": 2,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2018-04-04T23:03:03.318Z",
    "end": "2018-04-04T23:03:03.816Z",
    "duration": 498,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "5bed0edc-0c5a-454e-813b-ceb8ab7a6a28",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "ed8578a4-e487-4bc9-96f2-3df5426e1a80",
        "title": "Array",
        "fullFile": "/Users/kevinturney/FlattenArray/test/flattenArray.spec.js",
        "file": "/test/flattenArray.spec.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "5f69358b-1484-4619-83b0-21bcff3c7f03",
            "title": "#flattenArray()",
            "fullFile": "/Users/kevinturney/FlattenArray/test/flattenArray.spec.js",
            "file": "/test/flattenArray.spec.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return a single, flat array",
                "fullTitle": "Array #flattenArray() should return a single, flat array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.deepEqual((0, _flattenArray.flattenArray)([1, 2, [4], 3]), [1, 2, 4, 3]);",
                "err": {},
                "isRoot": false,
                "uuid": "1c020319-87f6-44ed-9d08-1d4a0f374eef",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return a single, flat array from 3 nested arrays",
                "fullTitle": "Array #flattenArray() should return a single, flat array from 3 nested arrays",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.deepEqual((0, _flattenArray.flattenArray)([1, [2, [3, [4]]]]), [1, 2, 3, 4]);",
                "err": {},
                "isRoot": false,
                "uuid": "13f45110-ae06-4fa0-8b8c-8672acc201e1",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return a single, flat array from an empty array",
                "fullTitle": "Array #flattenArray() should return a single, flat array from an empty array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.deepEqual((0, _flattenArray.flattenArray)([]), []);",
                "err": {},
                "isRoot": false,
                "uuid": "91091fd1-1deb-4e12-a977-eae8b5539e10",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return a single, flat array from 4 nested arrays",
                "fullTitle": "Array #flattenArray() should return a single, flat array from 4 nested arrays",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.deepEqual((0, _flattenArray.flattenArray)([[[[1]]]]), [1]);",
                "err": {},
                "isRoot": false,
                "uuid": "b6fd83c7-fcce-4e7b-855b-d52db6408743",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "1c020319-87f6-44ed-9d08-1d4a0f374eef",
              "13f45110-ae06-4fa0-8b8c-8672acc201e1",
              "91091fd1-1deb-4e12-a977-eae8b5539e10",
              "b6fd83c7-fcce-4e7b-855b-d52db6408743"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}